{"filter":false,"title":"app.py","tooltip":"/app.py","undoManager":{"mark":10,"position":10,"stack":[[{"start":{"row":0,"column":0},"end":{"row":33,"column":0},"action":"insert","lines":["from flask import Flask, request, render_template, redirect","import boto3","import os","from dotenv import load_dotenv","","load_dotenv()","","app = Flask(__name__)","","dynamodb = boto3.resource('dynamodb', region_name='your-region')","table = dynamodb.Table('JobApplications')","","@app.route('/')","def index():","    response = table.scan()","    jobs = response.get('Items', [])","    return render_template('index.html', jobs=jobs)","","@app.route('/add', methods=['POST'])","def add_job():","    company = request.form['company']","    role = request.form['role']","    status = request.form['status']","","    table.put_item(Item={","        'Company': company,","        'Role': role,","        'Status': status","    })","    return redirect('/')","","if __name__ == '__main__':","    app.run(debug=True)",""],"id":24}],[{"start":{"row":31,"column":0},"end":{"row":32,"column":23},"action":"remove","lines":["if __name__ == '__main__':","    app.run(debug=True)"],"id":25},{"start":{"row":31,"column":0},"end":{"row":32,"column":50},"action":"insert","lines":["if __name__ == '__main__':","    app.run(host='0.0.0.0', port=8080, debug=True)"]}],[{"start":{"row":31,"column":0},"end":{"row":32,"column":50},"action":"remove","lines":["if __name__ == '__main__':","    app.run(host='0.0.0.0', port=8080, debug=True)"],"id":26},{"start":{"row":31,"column":0},"end":{"row":33,"column":0},"action":"insert","lines":["if __name__ == '__main__':","    app.run(host='0.0.0.0', port=8080, debug=True)",""]}],[{"start":{"row":9,"column":0},"end":{"row":9,"column":64},"action":"remove","lines":["dynamodb = boto3.resource('dynamodb', region_name='your-region')"],"id":27},{"start":{"row":9,"column":0},"end":{"row":10,"column":0},"action":"insert","lines":["dynamodb = boto3.resource('dynamodb', region_name='eu-west-1')  # Ireland",""]}],[{"start":{"row":9,"column":73},"end":{"row":10,"column":0},"action":"remove","lines":["",""],"id":28}],[{"start":{"row":0,"column":0},"end":{"row":33,"column":0},"action":"remove","lines":["from flask import Flask, request, render_template, redirect","import boto3","import os","from dotenv import load_dotenv","","load_dotenv()","","app = Flask(__name__)","","dynamodb = boto3.resource('dynamodb', region_name='eu-west-1')  # Ireland","table = dynamodb.Table('JobApplications')","","@app.route('/')","def index():","    response = table.scan()","    jobs = response.get('Items', [])","    return render_template('index.html', jobs=jobs)","","@app.route('/add', methods=['POST'])","def add_job():","    company = request.form['company']","    role = request.form['role']","    status = request.form['status']","","    table.put_item(Item={","        'Company': company,","        'Role': role,","        'Status': status","    })","    return redirect('/')","","if __name__ == '__main__':","    app.run(host='0.0.0.0', port=8080, debug=True)",""],"id":29},{"start":{"row":0,"column":0},"end":{"row":35,"column":0},"action":"insert","lines":["from flask import Flask, request, render_template, redirect","import boto3","import uuid","from datetime import datetime","","app = Flask(__name__)","","# Connect to DynamoDB","dynamodb = boto3.resource('dynamodb', region_name='eu-west-1')  # Change to your actual region","table = dynamodb.Table('JobApplications')","","@app.route('/')","def index():","    response = table.scan()","    jobs = response.get('Items', [])","    return render_template('index.html', jobs=jobs)","","@app.route('/add', methods=['POST'])","def add_job():","    company = request.form['company']","    role = request.form['role']","    status = request.form['status']","    date_applied = datetime.now().strftime('%Y-%m-%d')","","    table.put_item(Item={","        'JobID': str(uuid.uuid4()),","        'Company': company,","        'Role': role,","        'Status': status,","        'DateApplied': date_applied","    })","    return redirect('/')","","if __name__ == '__main__':","    app.run(host='0.0.0.0', port=8080, debug=True)",""]}],[{"start":{"row":0,"column":0},"end":{"row":35,"column":0},"action":"remove","lines":["from flask import Flask, request, render_template, redirect","import boto3","import uuid","from datetime import datetime","","app = Flask(__name__)","","# Connect to DynamoDB","dynamodb = boto3.resource('dynamodb', region_name='eu-west-1')  # Change to your actual region","table = dynamodb.Table('JobApplications')","","@app.route('/')","def index():","    response = table.scan()","    jobs = response.get('Items', [])","    return render_template('index.html', jobs=jobs)","","@app.route('/add', methods=['POST'])","def add_job():","    company = request.form['company']","    role = request.form['role']","    status = request.form['status']","    date_applied = datetime.now().strftime('%Y-%m-%d')","","    table.put_item(Item={","        'JobID': str(uuid.uuid4()),","        'Company': company,","        'Role': role,","        'Status': status,","        'DateApplied': date_applied","    })","    return redirect('/')","","if __name__ == '__main__':","    app.run(host='0.0.0.0', port=8080, debug=True)",""],"id":30},{"start":{"row":0,"column":0},"end":{"row":15,"column":0},"action":"insert","lines":["@app.route('/delete/<job_id>', methods=['POST'])","def delete_job(job_id):","    table.delete_item(Key={'JobID': job_id})","    return redirect('/')","","@app.route('/edit/<job_id>', methods=['POST'])","def edit_job(job_id):","    new_status = request.form['status']","    table.update_item(","        Key={'JobID': job_id},","        UpdateExpression=\"set #s = :val\",","        ExpressionAttributeNames={'#s': 'Status'},","        ExpressionAttributeValues={':val': new_status}","    )","    return redirect('/')",""]}],[{"start":{"row":0,"column":0},"end":{"row":15,"column":0},"action":"remove","lines":["@app.route('/delete/<job_id>', methods=['POST'])","def delete_job(job_id):","    table.delete_item(Key={'JobID': job_id})","    return redirect('/')","","@app.route('/edit/<job_id>', methods=['POST'])","def edit_job(job_id):","    new_status = request.form['status']","    table.update_item(","        Key={'JobID': job_id},","        UpdateExpression=\"set #s = :val\",","        ExpressionAttributeNames={'#s': 'Status'},","        ExpressionAttributeValues={':val': new_status}","    )","    return redirect('/')",""],"id":31},{"start":{"row":0,"column":0},"end":{"row":35,"column":0},"action":"insert","lines":["from flask import Flask, request, render_template, redirect","import boto3","import uuid","from datetime import datetime","","app = Flask(__name__)","","# Connect to DynamoDB","dynamodb = boto3.resource('dynamodb', region_name='eu-west-1')  # Change to your actual region","table = dynamodb.Table('JobApplications')","","@app.route('/')","def index():","    response = table.scan()","    jobs = response.get('Items', [])","    return render_template('index.html', jobs=jobs)","","@app.route('/add', methods=['POST'])","def add_job():","    company = request.form['company']","    role = request.form['role']","    status = request.form['status']","    date_applied = datetime.now().strftime('%Y-%m-%d')","","    table.put_item(Item={","        'JobID': str(uuid.uuid4()),","        'Company': company,","        'Role': role,","        'Status': status,","        'DateApplied': date_applied","    })","    return redirect('/')","","if __name__ == '__main__':","    app.run(host='0.0.0.0', port=8080, debug=True)",""]}],[{"start":{"row":0,"column":0},"end":{"row":34,"column":50},"action":"remove","lines":["from flask import Flask, request, render_template, redirect","import boto3","import uuid","from datetime import datetime","","app = Flask(__name__)","","# Connect to DynamoDB","dynamodb = boto3.resource('dynamodb', region_name='eu-west-1')  # Change to your actual region","table = dynamodb.Table('JobApplications')","","@app.route('/')","def index():","    response = table.scan()","    jobs = response.get('Items', [])","    return render_template('index.html', jobs=jobs)","","@app.route('/add', methods=['POST'])","def add_job():","    company = request.form['company']","    role = request.form['role']","    status = request.form['status']","    date_applied = datetime.now().strftime('%Y-%m-%d')","","    table.put_item(Item={","        'JobID': str(uuid.uuid4()),","        'Company': company,","        'Role': role,","        'Status': status,","        'DateApplied': date_applied","    })","    return redirect('/')","","if __name__ == '__main__':","    app.run(host='0.0.0.0', port=8080, debug=True)"],"id":32},{"start":{"row":0,"column":0},"end":{"row":51,"column":0},"action":"insert","lines":["from flask import Flask, request, render_template, redirect","import boto3","import uuid","from datetime import datetime","","app = Flask(__name__)","","# âœ… Replace with your actual AWS region","dynamodb = boto3.resource('dynamodb', region_name='eu-west-1')","table = dynamodb.Table('JobApplications')","","@app.route('/')","def index():","    response = table.scan()","    jobs = response.get('Items', [])","    return render_template('index.html', jobs=jobs)","","@app.route('/add', methods=['POST'])","def add_job():","    company = request.form['company']","    role = request.form['role']","    status = request.form['status']","    date_applied = datetime.now().strftime('%Y-%m-%d')","","    table.put_item(Item={","        'JobID': str(uuid.uuid4()),  # Unique ID","        'Company': company,","        'Role': role,","        'Status': status,","        'DateApplied': date_applied","    })","    return redirect('/')","","@app.route('/delete/<job_id>', methods=['POST'])","def delete_job(job_id):","    table.delete_item(Key={'JobID': job_id})","    return redirect('/')","","@app.route('/edit/<job_id>', methods=['POST'])","def edit_job(job_id):","    new_status = request.form['status']","    table.update_item(","        Key={'JobID': job_id},","        UpdateExpression=\"set #s = :val\",","        ExpressionAttributeNames={'#s': 'Status'},","        ExpressionAttributeValues={':val': new_status}","    )","    return redirect('/')","","if __name__ == '__main__':","    app.run(host='0.0.0.0', port=8080, debug=True)",""]}],[{"start":{"row":0,"column":0},"end":{"row":51,"column":0},"action":"remove","lines":["from flask import Flask, request, render_template, redirect","import boto3","import uuid","from datetime import datetime","","app = Flask(__name__)","","# âœ… Replace with your actual AWS region","dynamodb = boto3.resource('dynamodb', region_name='eu-west-1')","table = dynamodb.Table('JobApplications')","","@app.route('/')","def index():","    response = table.scan()","    jobs = response.get('Items', [])","    return render_template('index.html', jobs=jobs)","","@app.route('/add', methods=['POST'])","def add_job():","    company = request.form['company']","    role = request.form['role']","    status = request.form['status']","    date_applied = datetime.now().strftime('%Y-%m-%d')","","    table.put_item(Item={","        'JobID': str(uuid.uuid4()),  # Unique ID","        'Company': company,","        'Role': role,","        'Status': status,","        'DateApplied': date_applied","    })","    return redirect('/')","","@app.route('/delete/<job_id>', methods=['POST'])","def delete_job(job_id):","    table.delete_item(Key={'JobID': job_id})","    return redirect('/')","","@app.route('/edit/<job_id>', methods=['POST'])","def edit_job(job_id):","    new_status = request.form['status']","    table.update_item(","        Key={'JobID': job_id},","        UpdateExpression=\"set #s = :val\",","        ExpressionAttributeNames={'#s': 'Status'},","        ExpressionAttributeValues={':val': new_status}","    )","    return redirect('/')","","if __name__ == '__main__':","    app.run(host='0.0.0.0', port=8080, debug=True)",""],"id":33},{"start":{"row":0,"column":0},"end":{"row":73,"column":0},"action":"insert","lines":["from flask import Flask, request, render_template, redirect","import boto3","import uuid","from datetime import datetime","import os","from werkzeug.utils import secure_filename","","app = Flask(__name__)","","# AWS setup","region = 'eu-west-1'  # âœ… Replace with your actual region","bucket_name = 'job-tracker-resumes'  # âœ… Replace with your actual S3 bucket name","","dynamodb = boto3.resource('dynamodb', region_name=region)","table = dynamodb.Table('JobApplications')","","s3 = boto3.client('s3', region_name=region)","","@app.route('/')","def index():","    response = table.scan()","    jobs = response.get('Items', [])","    return render_template('index.html', jobs=jobs)","","@app.route('/add', methods=['POST'])","def add_job():","    company = request.form['company']","    role = request.form['role']","    status = request.form['status']","    date_applied = datetime.now().strftime('%Y-%m-%d')","    job_id = str(uuid.uuid4())","","    # Upload resume to S3","    file = request.files['resume']","    filename = secure_filename(file.filename)","    s3_filename = f\"{job_id}_{filename}\"","","    # Upload the file","    s3.upload_fileobj(file, bucket_name, s3_filename)","","    # Public URL","    file_url = f\"https://{bucket_name}.s3.amazonaws.com/{s3_filename}\"","","    # Store in DynamoDB","    table.put_item(Item={","        'JobID': job_id,","        'Company': company,","        'Role': role,","        'Status': status,","        'DateApplied': date_applied,","        'ResumeURL': file_url","    })","","    return redirect('/')","","@app.route('/delete/<job_id>', methods=['POST'])","def delete_job(job_id):","    table.delete_item(Key={'JobID': job_id})","    return redirect('/')","","@app.route('/edit/<job_id>', methods=['POST'])","def edit_job(job_id):","    new_status = request.form['status']","    table.update_item(","        Key={'JobID': job_id},","        UpdateExpression=\"set #s = :val\",","        ExpressionAttributeNames={'#s': 'Status'},","        ExpressionAttributeValues={':val': new_status}","    )","    return redirect('/')","","if __name__ == '__main__':","    app.run(host='0.0.0.0', port=8080, debug=True)",""]}],[{"start":{"row":0,"column":0},"end":{"row":73,"column":0},"action":"remove","lines":["from flask import Flask, request, render_template, redirect","import boto3","import uuid","from datetime import datetime","import os","from werkzeug.utils import secure_filename","","app = Flask(__name__)","","# AWS setup","region = 'eu-west-1'  # âœ… Replace with your actual region","bucket_name = 'job-tracker-resumes'  # âœ… Replace with your actual S3 bucket name","","dynamodb = boto3.resource('dynamodb', region_name=region)","table = dynamodb.Table('JobApplications')","","s3 = boto3.client('s3', region_name=region)","","@app.route('/')","def index():","    response = table.scan()","    jobs = response.get('Items', [])","    return render_template('index.html', jobs=jobs)","","@app.route('/add', methods=['POST'])","def add_job():","    company = request.form['company']","    role = request.form['role']","    status = request.form['status']","    date_applied = datetime.now().strftime('%Y-%m-%d')","    job_id = str(uuid.uuid4())","","    # Upload resume to S3","    file = request.files['resume']","    filename = secure_filename(file.filename)","    s3_filename = f\"{job_id}_{filename}\"","","    # Upload the file","    s3.upload_fileobj(file, bucket_name, s3_filename)","","    # Public URL","    file_url = f\"https://{bucket_name}.s3.amazonaws.com/{s3_filename}\"","","    # Store in DynamoDB","    table.put_item(Item={","        'JobID': job_id,","        'Company': company,","        'Role': role,","        'Status': status,","        'DateApplied': date_applied,","        'ResumeURL': file_url","    })","","    return redirect('/')","","@app.route('/delete/<job_id>', methods=['POST'])","def delete_job(job_id):","    table.delete_item(Key={'JobID': job_id})","    return redirect('/')","","@app.route('/edit/<job_id>', methods=['POST'])","def edit_job(job_id):","    new_status = request.form['status']","    table.update_item(","        Key={'JobID': job_id},","        UpdateExpression=\"set #s = :val\",","        ExpressionAttributeNames={'#s': 'Status'},","        ExpressionAttributeValues={':val': new_status}","    )","    return redirect('/')","","if __name__ == '__main__':","    app.run(host='0.0.0.0', port=8080, debug=True)",""],"id":35},{"start":{"row":0,"column":0},"end":{"row":77,"column":0},"action":"insert","lines":["from flask import Flask, request, render_template, redirect, send_from_directory","import boto3","import uuid","from datetime import datetime","import os","from werkzeug.utils import secure_filename","","app = Flask(__name__)","","# Setup","region = 'eu-west-1'","dynamodb = boto3.resource('dynamodb', region_name=region)","table = dynamodb.Table('JobApplications')","","UPLOAD_FOLDER = 'uploads'","app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER","","@app.route('/')","def index():","    response = table.scan()","    jobs = response.get('Items', [])","    return render_template('index.html', jobs=jobs)","","@app.route('/add', methods=['POST'])","def add_job():","    company = request.form['company']","    role = request.form['role']","    status = request.form['status']","    date_applied = datetime.now().strftime('%Y-%m-%d')","    job_id = str(uuid.uuid4())","","    # Save file locally","    file = request.files['resume']","    filename = secure_filename(f\"{job_id}_{file.filename}\")","    file_path = os.path.join(app.config['UPLOAD_FOLDER'], filename)","    file.save(file_path)","","    file_url = f\"/uploads/{filename}\"  # Flask route","","    # Save job to DynamoDB","    table.put_item(Item={","        'JobID': job_id,","        'Company': company,","        'Role': role,","        'Status': status,","        'DateApplied': date_applied,","        'ResumeURL': file_url","    })","","    return redirect('/')","","@app.route('/uploads/<filename>')","def uploaded_file(filename):","    return send_from_directory(app.config['UPLOAD_FOLDER'], filename)","","@app.route('/delete/<job_id>', methods=['POST'])","def delete_job(job_id):","    table.delete_item(Key={'JobID': job_id})","    return redirect('/')","","@app.route('/edit/<job_id>', methods=['POST'])","def edit_job(job_id):","    new_status = request.form['status']","    table.update_item(","        Key={'JobID': job_id},","        UpdateExpression=\"set #s = :val\",","        ExpressionAttributeNames={'#s': 'Status'},","        ExpressionAttributeValues={':val': new_status}","    )","    return redirect('/')","","if __name__ == '__main__':","    # Make sure uploads folder exists","    if not os.path.exists(UPLOAD_FOLDER):","        os.makedirs(UPLOAD_FOLDER)","        ","    app.run(host='0.0.0.0', port=8080, debug=True)",""]}]]},"ace":{"folds":[],"scrolltop":1004,"scrollleft":0,"selection":{"start":{"row":77,"column":0},"end":{"row":77,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":70,"state":"start","mode":"ace/mode/python"}},"timestamp":1743201212503,"hash":"7fe6ae27f5f58471234eb7214b61fca22aa78ff7"}