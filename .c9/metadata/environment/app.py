{"filter":false,"title":"app.py","tooltip":"/app.py","undoManager":{"mark":4,"position":4,"stack":[[{"start":{"row":0,"column":0},"end":{"row":0,"column":2},"action":"insert","lines":["# "],"id":14,"ignore":true},{"start":{"row":1,"column":0},"end":{"row":1,"column":2},"action":"insert","lines":["# "]},{"start":{"row":2,"column":0},"end":{"row":2,"column":2},"action":"insert","lines":["# "]},{"start":{"row":3,"column":0},"end":{"row":3,"column":2},"action":"insert","lines":["# "]},{"start":{"row":4,"column":0},"end":{"row":4,"column":2},"action":"insert","lines":["# "]},{"start":{"row":5,"column":0},"end":{"row":5,"column":2},"action":"insert","lines":["# "]},{"start":{"row":7,"column":0},"end":{"row":7,"column":2},"action":"insert","lines":["# "]},{"start":{"row":9,"column":0},"end":{"row":9,"column":2},"action":"insert","lines":["# "]},{"start":{"row":10,"column":0},"end":{"row":10,"column":2},"action":"insert","lines":["# "]},{"start":{"row":11,"column":0},"end":{"row":11,"column":2},"action":"insert","lines":["# "]},{"start":{"row":12,"column":0},"end":{"row":12,"column":2},"action":"insert","lines":["# "]},{"start":{"row":14,"column":0},"end":{"row":14,"column":2},"action":"insert","lines":["# "]},{"start":{"row":15,"column":0},"end":{"row":15,"column":2},"action":"insert","lines":["# "]},{"start":{"row":17,"column":0},"end":{"row":17,"column":2},"action":"insert","lines":["# "]},{"start":{"row":18,"column":0},"end":{"row":18,"column":2},"action":"insert","lines":["# "]},{"start":{"row":19,"column":0},"end":{"row":19,"column":2},"action":"insert","lines":["# "]},{"start":{"row":20,"column":0},"end":{"row":20,"column":2},"action":"insert","lines":["# "]},{"start":{"row":21,"column":0},"end":{"row":21,"column":2},"action":"insert","lines":["# "]},{"start":{"row":23,"column":0},"end":{"row":23,"column":2},"action":"insert","lines":["# "]},{"start":{"row":24,"column":0},"end":{"row":24,"column":2},"action":"insert","lines":["# "]},{"start":{"row":25,"column":0},"end":{"row":25,"column":2},"action":"insert","lines":["# "]},{"start":{"row":26,"column":0},"end":{"row":26,"column":2},"action":"insert","lines":["# "]},{"start":{"row":27,"column":0},"end":{"row":27,"column":2},"action":"insert","lines":["# "]},{"start":{"row":28,"column":0},"end":{"row":28,"column":2},"action":"insert","lines":["# "]},{"start":{"row":29,"column":0},"end":{"row":29,"column":2},"action":"insert","lines":["# "]},{"start":{"row":31,"column":0},"end":{"row":31,"column":2},"action":"insert","lines":["# "]},{"start":{"row":32,"column":0},"end":{"row":32,"column":2},"action":"insert","lines":["# "]},{"start":{"row":33,"column":0},"end":{"row":33,"column":2},"action":"insert","lines":["# "]},{"start":{"row":34,"column":0},"end":{"row":34,"column":2},"action":"insert","lines":["# "]},{"start":{"row":35,"column":0},"end":{"row":35,"column":2},"action":"insert","lines":["# "]},{"start":{"row":37,"column":0},"end":{"row":37,"column":2},"action":"insert","lines":["# "]},{"start":{"row":39,"column":0},"end":{"row":39,"column":2},"action":"insert","lines":["# "]},{"start":{"row":40,"column":0},"end":{"row":40,"column":2},"action":"insert","lines":["# "]},{"start":{"row":41,"column":0},"end":{"row":41,"column":2},"action":"insert","lines":["# "]},{"start":{"row":42,"column":0},"end":{"row":42,"column":2},"action":"insert","lines":["# "]},{"start":{"row":43,"column":0},"end":{"row":43,"column":2},"action":"insert","lines":["# "]},{"start":{"row":44,"column":0},"end":{"row":44,"column":2},"action":"insert","lines":["# "]},{"start":{"row":45,"column":0},"end":{"row":45,"column":2},"action":"insert","lines":["# "]},{"start":{"row":46,"column":0},"end":{"row":46,"column":2},"action":"insert","lines":["# "]},{"start":{"row":47,"column":0},"end":{"row":47,"column":2},"action":"insert","lines":["# "]},{"start":{"row":49,"column":0},"end":{"row":49,"column":2},"action":"insert","lines":["# "]},{"start":{"row":51,"column":0},"end":{"row":51,"column":2},"action":"insert","lines":["# "]},{"start":{"row":52,"column":0},"end":{"row":52,"column":2},"action":"insert","lines":["# "]},{"start":{"row":53,"column":0},"end":{"row":53,"column":2},"action":"insert","lines":["# "]},{"start":{"row":55,"column":0},"end":{"row":55,"column":2},"action":"insert","lines":["# "]},{"start":{"row":56,"column":0},"end":{"row":56,"column":2},"action":"insert","lines":["# "]},{"start":{"row":57,"column":0},"end":{"row":57,"column":2},"action":"insert","lines":["# "]},{"start":{"row":58,"column":0},"end":{"row":58,"column":2},"action":"insert","lines":["# "]},{"start":{"row":60,"column":0},"end":{"row":60,"column":2},"action":"insert","lines":["# "]},{"start":{"row":61,"column":0},"end":{"row":61,"column":2},"action":"insert","lines":["# "]},{"start":{"row":62,"column":0},"end":{"row":62,"column":2},"action":"insert","lines":["# "]},{"start":{"row":63,"column":0},"end":{"row":63,"column":2},"action":"insert","lines":["# "]},{"start":{"row":64,"column":0},"end":{"row":64,"column":2},"action":"insert","lines":["# "]},{"start":{"row":65,"column":0},"end":{"row":65,"column":2},"action":"insert","lines":["# "]},{"start":{"row":66,"column":0},"end":{"row":66,"column":2},"action":"insert","lines":["# "]},{"start":{"row":67,"column":0},"end":{"row":67,"column":2},"action":"insert","lines":["# "]},{"start":{"row":68,"column":0},"end":{"row":68,"column":2},"action":"insert","lines":["# "]},{"start":{"row":69,"column":0},"end":{"row":69,"column":2},"action":"insert","lines":["# "]},{"start":{"row":71,"column":0},"end":{"row":71,"column":2},"action":"insert","lines":["# "]},{"start":{"row":72,"column":0},"end":{"row":72,"column":2},"action":"insert","lines":["# "]},{"start":{"row":73,"column":0},"end":{"row":73,"column":2},"action":"insert","lines":["# "]},{"start":{"row":74,"column":0},"end":{"row":74,"column":2},"action":"insert","lines":["# "]},{"start":{"row":76,"column":0},"end":{"row":76,"column":2},"action":"insert","lines":["# "]},{"start":{"row":78,"column":0},"end":{"row":78,"column":2},"action":"insert","lines":["# "]},{"start":{"row":79,"column":0},"end":{"row":79,"column":2},"action":"insert","lines":["# "]},{"start":{"row":80,"column":0},"end":{"row":80,"column":2},"action":"insert","lines":["# "]},{"start":{"row":82,"column":0},"end":{"row":82,"column":2},"action":"insert","lines":["# "]},{"start":{"row":83,"column":0},"end":{"row":83,"column":2},"action":"insert","lines":["# "]}],[{"start":{"row":0,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["","","","",""],"id":15,"ignore":true}],[{"start":{"row":0,"column":0},"end":{"row":83,"column":0},"action":"insert","lines":["from flask import Flask, request, render_template, redirect, send_from_directory","import boto3","import uuid","from datetime import datetime","import os","from werkzeug.utils import secure_filename","","app = Flask(__name__)","","# AWS DynamoDB Setup","region = 'eu-west-1'","dynamodb = boto3.resource('dynamodb', region_name=region)","table = dynamodb.Table('JobApplications')","","# File Upload Setup","UPLOAD_FOLDER = 'uploads'","app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER","","# Ensure uploads folder exists","if not os.path.exists(UPLOAD_FOLDER):","    os.makedirs(UPLOAD_FOLDER)","","@app.route('/')","def index():","    # Fetch all job entries from DynamoDB","    response = table.scan()","    jobs = response.get('Items', [])","    # Sort by date (latest first) if DateApplied exists","    jobs.sort(key=lambda x: x.get('DateApplied', ''), reverse=True)","    return render_template('index.html', jobs=jobs)","","@app.route('/add', methods=['POST'])","def add_job():","    company = request.form['company']","    role = request.form['role']","    status = request.form['status']","    job_id = str(uuid.uuid4())","    date_applied = datetime.now().strftime('%Y-%m-%d')","","    # Handle file upload","    file = request.files['resume']","    filename = secure_filename(f\"{job_id}_{file.filename}\")","    file_path = os.path.join(app.config['UPLOAD_FOLDER'], filename)","    file.save(file_path)","","    file_url = f\"/uploads/{filename}\"  # Flask route","","    # Insert into DynamoDB","    table.put_item(Item={","        'JobID': job_id,","        'Company': company,","        'Role': role,","        'Status': status,","        'DateApplied': date_applied,","        'ResumeURL': file_url","    })","","    return redirect('/')","","@app.route('/uploads/<filename>')","def uploaded_file(filename):","    return send_from_directory(app.config['UPLOAD_FOLDER'], filename)","","@app.route('/edit/<job_id>', methods=['POST'])","def edit_job(job_id):","    new_status = request.form['status']","    table.update_item(","        Key={'JobID': job_id},","        UpdateExpression=\"SET #s = :val\",","        ExpressionAttributeNames={'#s': 'Status'},","        ExpressionAttributeValues={':val': new_status}","    )","    return redirect('/')","","@app.route('/delete/<job_id>', methods=['POST'])","def delete_job(job_id):","    table.delete_item(Key={'JobID': job_id})","    return redirect('/')","","if __name__ == '__main__':","    # Run with dynamic port for Elastic Beanstalk","    port = int(os.environ.get(\"PORT\", 5000))","    app.run(host='0.0.0.0', port=port)",""],"id":16,"ignore":true}],[{"start":{"row":85,"column":0},"end":{"row":173,"column":0},"action":"remove","lines":["","","# from flask import Flask, request, render_template, redirect, send_from_directory","# import boto3","# import uuid","# from datetime import datetime","# import os","# from werkzeug.utils import secure_filename","","# app = Flask(__name__)","","# # Setup","# region = 'eu-west-1'","# dynamodb = boto3.resource('dynamodb', region_name=region)","# table = dynamodb.Table('JobApplications')","","# UPLOAD_FOLDER = 'uploads'","# app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER","","# @app.route('/')","# def index():","#     response = table.scan()","#     jobs = response.get('Items', [])","#     return render_template('index.html', jobs=jobs)","","# @app.route('/add', methods=['POST'])","# def add_job():","#     company = request.form['company']","#     role = request.form['role']","#     status = request.form['status']","#     date_applied = datetime.now().strftime('%Y-%m-%d')","#     job_id = str(uuid.uuid4())","","#     # Save file locally","#     file = request.files['resume']","#     filename = secure_filename(f\"{job_id}_{file.filename}\")","#     file_path = os.path.join(app.config['UPLOAD_FOLDER'], filename)","#     file.save(file_path)","","#     file_url = f\"/uploads/{filename}\"  # Flask route","","#     # Save job to DynamoDB","#     table.put_item(Item={","#         'JobID': job_id,","#         'Company': company,","#         'Role': role,","#         'Status': status,","#         'DateApplied': date_applied,","#         'ResumeURL': file_url","#     })","","#     return redirect('/')","","# @app.route('/uploads/<filename>')","# def uploaded_file(filename):","#     return send_from_directory(app.config['UPLOAD_FOLDER'], filename)","","# @app.route('/delete/<job_id>', methods=['POST'])","# def delete_job(job_id):","#     table.delete_item(Key={'JobID': job_id})","#     return redirect('/')","","# @app.route('/edit/<job_id>', methods=['POST'])","# def edit_job(job_id):","#     new_status = request.form['status']","#     table.update_item(","#         Key={'JobID': job_id},","#         UpdateExpression=\"set #s = :val\",","#         ExpressionAttributeNames={'#s': 'Status'},","#         ExpressionAttributeValues={':val': new_status}","#     )","#     return redirect('/')","","# # if __name__ == '__main__':","# #     # Make sure uploads folder exists","# #     if not os.path.exists(UPLOAD_FOLDER):","# #         os.makedirs(UPLOAD_FOLDER)","        ","# #     app.run(host='0.0.0.0', port=8080, debug=True)","","# if __name__ == '__main__':","#     if not os.path.exists(UPLOAD_FOLDER):","#         os.makedirs(UPLOAD_FOLDER)","","#     port = int(os.environ.get('PORT', 5000))","#     app.run(host='0.0.0.0', port=port)","","",""],"id":17},{"start":{"row":84,"column":0},"end":{"row":85,"column":0},"action":"remove","lines":["",""]},{"start":{"row":83,"column":0},"end":{"row":84,"column":0},"action":"remove","lines":["",""]},{"start":{"row":82,"column":38},"end":{"row":83,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":0,"column":0},"end":{"row":82,"column":38},"action":"remove","lines":["from flask import Flask, request, render_template, redirect, send_from_directory","import boto3","import uuid","from datetime import datetime","import os","from werkzeug.utils import secure_filename","","app = Flask(__name__)","","# AWS DynamoDB Setup","region = 'eu-west-1'","dynamodb = boto3.resource('dynamodb', region_name=region)","table = dynamodb.Table('JobApplications')","","# File Upload Setup","UPLOAD_FOLDER = 'uploads'","app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER","","# Ensure uploads folder exists","if not os.path.exists(UPLOAD_FOLDER):","    os.makedirs(UPLOAD_FOLDER)","","@app.route('/')","def index():","    # Fetch all job entries from DynamoDB","    response = table.scan()","    jobs = response.get('Items', [])","    # Sort by date (latest first) if DateApplied exists","    jobs.sort(key=lambda x: x.get('DateApplied', ''), reverse=True)","    return render_template('index.html', jobs=jobs)","","@app.route('/add', methods=['POST'])","def add_job():","    company = request.form['company']","    role = request.form['role']","    status = request.form['status']","    job_id = str(uuid.uuid4())","    date_applied = datetime.now().strftime('%Y-%m-%d')","","    # Handle file upload","    file = request.files['resume']","    filename = secure_filename(f\"{job_id}_{file.filename}\")","    file_path = os.path.join(app.config['UPLOAD_FOLDER'], filename)","    file.save(file_path)","","    file_url = f\"/uploads/{filename}\"  # Flask route","","    # Insert into DynamoDB","    table.put_item(Item={","        'JobID': job_id,","        'Company': company,","        'Role': role,","        'Status': status,","        'DateApplied': date_applied,","        'ResumeURL': file_url","    })","","    return redirect('/')","","@app.route('/uploads/<filename>')","def uploaded_file(filename):","    return send_from_directory(app.config['UPLOAD_FOLDER'], filename)","","@app.route('/edit/<job_id>', methods=['POST'])","def edit_job(job_id):","    new_status = request.form['status']","    table.update_item(","        Key={'JobID': job_id},","        UpdateExpression=\"SET #s = :val\",","        ExpressionAttributeNames={'#s': 'Status'},","        ExpressionAttributeValues={':val': new_status}","    )","    return redirect('/')","","@app.route('/delete/<job_id>', methods=['POST'])","def delete_job(job_id):","    table.delete_item(Key={'JobID': job_id})","    return redirect('/')","","if __name__ == '__main__':","    # Run with dynamic port for Elastic Beanstalk","    port = int(os.environ.get(\"PORT\", 5000))","    app.run(host='0.0.0.0', port=port)"],"id":18},{"start":{"row":0,"column":0},"end":{"row":95,"column":0},"action":"insert","lines":["\"\"\"Flask application for managing job applications using AWS DynamoDB.\"\"\"","","import os","import uuid","from datetime import datetime","","from flask import Flask, request, render_template, redirect, send_from_directory","import boto3","from werkzeug.utils import secure_filename","","app = Flask(__name__)","","# AWS DynamoDB Setup","REGION = 'eu-west-1'","dynamodb = boto3.resource('dynamodb', region_name=REGION)","table = dynamodb.Table('JobApplications')","","# File Upload Setup","UPLOAD_FOLDER = 'uploads'","app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER","","# Ensure uploads folder exists","if not os.path.exists(UPLOAD_FOLDER):","    os.makedirs(UPLOAD_FOLDER)","","","@app.route('/')","def index():","    \"\"\"Render the home page with job application list.\"\"\"","    response = table.scan()","    jobs = response.get('Items', [])","    jobs.sort(key=lambda x: x.get('DateApplied', ''), reverse=True)","    return render_template('index.html', jobs=jobs)","","","@app.route('/add', methods=['POST'])","def add_job():","    \"\"\"Handle new job application submission.\"\"\"","    company = request.form['company']","    role = request.form['role']","    status = request.form['status']","    job_id = str(uuid.uuid4())","    date_applied = datetime.now().strftime('%Y-%m-%d')","","    # Handle file upload","    file = request.files['resume']","    filename = secure_filename(f\"{job_id}_{file.filename}\")","    file_path = os.path.join(app.config['UPLOAD_FOLDER'], filename)","    file.save(file_path)","","    file_url = f\"/uploads/{filename}\"","","    # Insert into DynamoDB","    table.put_item(Item={","        'JobID': job_id,","        'Company': company,","        'Role': role,","        'Status': status,","        'DateApplied': date_applied,","        'ResumeURL': file_url","    })","","    return redirect('/')","","","@app.route('/uploads/<filename>')","def uploaded_file(filename):","    \"\"\"Serve uploaded resume files.\"\"\"","    return send_from_directory(app.config['UPLOAD_FOLDER'], filename)","","","@app.route('/edit/<job_id>', methods=['POST'])","def edit_job(job_id):","    \"\"\"Edit job application status.\"\"\"","    new_status = request.form['status']","    table.update_item(","        Key={'JobID': job_id},","        UpdateExpression=\"SET #s = :val\",","        ExpressionAttributeNames={'#s': 'Status'},","        ExpressionAttributeValues={':val': new_status}","    )","    return redirect('/')","","","@app.route('/delete/<job_id>', methods=['POST'])","def delete_job(job_id):","    \"\"\"Delete a job application.\"\"\"","    table.delete_item(Key={'JobID': job_id})","    return redirect('/')","","","if __name__ == '__main__':","    # Run with dynamic port for Elastic Beanstalk","    port = int(os.environ.get(\"PORT\", 5000))","    app.run(host='0.0.0.0', port=port)",""]}]]},"ace":{"folds":[],"scrolltop":660.0000193119048,"scrollleft":0,"selection":{"start":{"row":95,"column":0},"end":{"row":95,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":53,"state":"start","mode":"ace/mode/python"}},"timestamp":1744183868771,"hash":"db83c733ad9083ee56bac61e2c1a8ba11ee46848"}